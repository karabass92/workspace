# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateDepartamentInput {
  name: String!
}

input CreatePositionInput {
  name: String!
}

input CreateRightInput {
  name: String!
}

input CreateUserInput {
  departament: UserDepartamentInput
  login: String!
  password: String!
  position: UserPositionInput!
  rights: [UserRightInput!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Departament {
  id: ID!
  name: String!
}

type Mutation {
  createDepartament(createDepartament: CreateDepartamentInput!): Departament!
  createPosition(createPosition: CreatePositionInput!): Position!
  createRight(createRight: CreateRightInput!): Right!
  createUser(createUser: CreateUserInput!): User!
  removeDepartament(id: Float!): Float!
  removePosition(id: Float!): Float!
  removeRight(id: Float!): Float!
  removeUser(id: Float!): Float!
  updateDepartament(updateDepartament: UpdateDepartamentInput!): Departament!
  updatePosition(updatePosition: UpdatePositionInput!): Position!
  updateRight(updateRight: UpdateRightInput!): Right!
  updateUser(updateUser: UpdateUserInput!): User!
}

type Position {
  id: ID!
  name: String!
}

type Query {
  getAllDepartaments: [Departament!]!
  getAllPositions: [Position!]!
  getAllRights: [Right!]!
  getAllUsers(departamentId: Float, positionId: Float): [User!]!
  getOneDepartament(id: Float!): Departament!
  getOnePosition(id: Float!): Position!
  getOneRight(id: Float!): Right!
  getOneUser(id: Float!): User!
}

type Right {
  id: ID!
  name: String!
}

input UpdateDepartamentInput {
  id: ID!
  name: String!
}

input UpdatePositionInput {
  id: ID!
  name: String!
}

input UpdateRightInput {
  id: ID!
  name: String!
}

input UpdateUserInput {
  departament: UserDepartamentInput
  id: ID!
  login: String
  password: String
  position: UserPositionInput
  rights: [UserRightInput!]
}

type User {
  createdAt: DateTime!
  departament: Departament
  id: ID!
  login: String!
  password: String!
  position: Position!
  rights: Right!
  updatedAt: DateTime!
}

input UserDepartamentInput {
  id: Float!
}

input UserPositionInput {
  id: Float!
}

input UserRightInput {
  id: Float
}